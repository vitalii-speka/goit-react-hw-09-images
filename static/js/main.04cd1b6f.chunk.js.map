{"version":3,"sources":["componets/ImageGalleryItem/ImageGalleryItem.module.css","componets/Button/Button.module.css","componets/Modal/Modal.module.css","componets/ImageGallery/ImageGallery.module.css","componets/Searchbar/Searchbar.js","componets/ImageGalleryItem/ImageGalleryItem.js","componets/ImageGallery/ImageGallery.js","componets/Button/Button.js","componets/Modal/Modal.js","App.js","service/photos-api.js","index.js","componets/Searchbar/Searchbar.module.css"],"names":["module","exports","Searchbar","onSubmit","useState","searchName","setSearchName","event","preventDefault","toast","info","className","s","SearchBar","SearchForm","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","name","value","onChange","currentTarget","toLowerCase","trim","autoComplete","autoFocus","placeholder","ImageGalleryItem","photo","styles","item","image","src","webformatURL","data-large-url","largeImageURL","alt","tags","defaultProps","ImageGallery","photos","onClick","imageGallery","map","id","Button","children","allProps","buttonWrapper","button","modalRoot","document","querySelector","Modal","onClose","isImageLoading","setIsImageLoading","useEffect","handleKeyDown","e","code","window","addEventListener","removeEventListener","createPortal","Overlay","target","color","height","width","onLoad","App","setPhotos","error","setError","loading","setLoading","page","setPage","showModal","setShowModal","currentImgObjUrl","setCurrentImgObjUrl","currentImgObjAlt","setCurrentImgObjAlt","scrollToBottom","useCallback","scrollTo","top","documentElement","scrollTop","behavior","fetchProcessing","fetch","then","response","ok","json","Promise","reject","Error","fethPhotosAPI","hits","length","prePhotos","catch","message","toggleModal","prevShowModal","style","padding","textAlign","largeUrl","dataset","nodeName","aria-label","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.04cd1b6f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ImageGalleryItem_item__95HTr\",\"image\":\"ImageGalleryItem_image__3stLn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__z10tk\",\"buttonWrapper\":\"Button_buttonWrapper__2ca5k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__ZeNTK\",\"Modal\":\"Modal_Modal__1wpyB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageGallery\":\"ImageGallery_imageGallery__xEjXb\"};","import React, { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport s from './Searchbar.module.css';\r\n\r\nexport default function Searchbar({ onSubmit }) {\r\n  const [searchName, setSearchName] = useState('');\r\n\r\n  const handleNameChange = event => {\r\n    setSearchName(event.currentTarget.value.toLowerCase().trim());\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    if (searchName === '') {\r\n      return toast.info('please, enter your request');\r\n    }\r\n    onSubmit(searchName);\r\n    setSearchName('');\r\n  };\r\n\r\n  return (\r\n    <header onSubmit={handleSubmit} className={s.SearchBar}>\r\n      <form className={s.SearchForm}>\r\n        <button type=\"submit\" className={s.SearchFormButton}>\r\n          <span className={s.SearchFormButtonLabel}>Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className={s.SearchFormInput}\r\n          type=\"text\"\r\n          name=\"searchName\"\r\n          value={searchName}\r\n          onChange={handleNameChange}\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n\r\n/*class Searchbar extends Component {\r\n  state = {\r\n    searchName: \"\",\r\n  };\r\n\r\n  handleNameChange = (event) => {\r\n    this.setState({ searchName: event.currentTarget.value.toLowerCase() });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (this.state.searchName === \"\") {\r\n      return toast.info(\"please, enter your request\");\r\n    }\r\n    this.props.onSubmit(this.state.searchName);\r\n    this.setState({ searchName: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header onSubmit={this.handleSubmit} className={s.SearchBar}>\r\n        <form className={s.SearchForm}>\r\n          <button type=\"submit\" className={s.SearchFormButton}>\r\n            <span className={s.SearchFormButtonLabel}>Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className={s.SearchFormInput}\r\n            type=\"text\"\r\n            name=\"searchName\"\r\n            value={this.state.searchName}\r\n            onChange={this.handleNameChange}\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar; */\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ImageGalleryItem.module.css\";\r\n\r\nfunction ImageGalleryItem({ photo }) {\r\n  return (\r\n    <>\r\n      <li className={styles.item}>\r\n        <img\r\n          className={styles.image}\r\n          src={photo.webformatURL}\r\n          data-large-url={photo.largeImageURL}\r\n          alt={photo.tags}\r\n        />\r\n      </li>\r\n    </>\r\n  );\r\n}\r\n\r\nImageGalleryItem.defaultProps = {\r\n  largeImageURL: \"\",\r\n  webformatURL: \"\",\r\n  tags: \"\",\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  src: PropTypes.string,\r\n  webformatURL: PropTypes.string,\r\n  tags: PropTypes.string,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ImageGalleryItem from \"../ImageGalleryItem\";\r\nimport s from \"./ImageGallery.module.css\";\r\n\r\nfunction ImageGallery({ photos, onClick }) {\r\n  return (\r\n    <ul className={s.imageGallery} onClick={onClick}>\r\n      {photos.map((photo) => (\r\n        <ImageGalleryItem key={photo.id} photo={photo} />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nImageGallery.defaultProps = {\r\n  photos: [],\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  photos: PropTypes.array,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Button.module.css\";\r\n\r\nconst Button = ({ children, onClick, ...allProps }) => (\r\n  <div className={s.buttonWrapper}>\r\n    <button type=\"button\" className={s.button} onClick={onClick} {...allProps}>\r\n      Load More {children}\r\n    </button>\r\n  </div>\r\n);\r\n\r\nButton.defaultProps = {\r\n  onClick: () => null,\r\n  children: null,\r\n};\r\n\r\nButton.propTypes = {\r\n  children: PropTypes.node,\r\n  onClick: PropTypes.func,\r\n  \"aria-label\": PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport styles from './Modal.module.css';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default function Modal({ onClose, src, alt }) {\r\n  const [isImageLoading, setIsImageLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = e => {\r\n      if (e.code === 'Escape') {\r\n        onClose();\r\n        setIsImageLoading(true);\r\n      }\r\n    };\r\n\r\n    window.addEventListener('keydown', handleKeyDown);\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, [onClose]);\r\n\r\n  const handleBackdropClick = event => {\r\n    if (event.currentTarget === event.target) {\r\n      onClose();\r\n      setIsImageLoading(true);\r\n    }\r\n  };\r\n\r\n  const onImageLoad = () => {\r\n    setIsImageLoading(false);\r\n  };\r\n\r\n  return createPortal(\r\n    <div className={styles.Overlay} onClick={handleBackdropClick}>\r\n      <div className={styles.Modal}>\r\n        {isImageLoading && (\r\n          <Loader type=\"Watch\" color=\"#fff\" height={500} width={500} />\r\n        )}\r\n        <img src={src} alt={alt} onLoad={onImageLoad} />\r\n      </div>\r\n    </div>,\r\n    modalRoot,\r\n  );\r\n}\r\n\r\n/*  class Modal extends Component {\r\n  state = {\r\n    isImageLoading: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n      this.setState({ isImageLoading: true });\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = event => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.onClose();\r\n      this.setState({ isImageLoading: true });\r\n    }\r\n  };\r\n\r\n  onImageLoad = () => {\r\n    this.setState({ isImageLoading: false });\r\n  };\r\n\r\n  render() {\r\n    const { src, alt } = this.props;\r\n    return createPortal(\r\n      <div className={styles.Overlay} onClick={this.handleBackdropClick}>\r\n        <div className={styles.Modal}>\r\n          {this.state.isImageLoading && (\r\n            <Loader type=\"Watch\" color=\"#fff\" height={500} width={500} />\r\n          )}\r\n          <img src={src} alt={alt} onLoad={this.onImageLoad} />\r\n          {this.props.children}\r\n        </div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal; */\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './App.css';\r\nimport Searchbar from './componets/Searchbar';\r\nimport fethPhotosAPI from './service/photos-api';\r\nimport ImageGallery from './componets/ImageGallery';\r\nimport Loader from 'react-loader-spinner';\r\nimport Button from './componets/Button';\r\nimport Modal from './componets/Modal';\r\n\r\nexport default function App() {\r\n  const [photos, setPhotos] = useState([]);\r\n  const [searchName, setSearchName] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [currentImgObjUrl, setCurrentImgObjUrl] = useState('');\r\n  const [currentImgObjAlt, setCurrentImgObjAlt] = useState('');\r\n\r\n  const scrollToBottom = useCallback(() => {\r\n    if (page !== 2)\r\n      window.scrollTo({\r\n        top: document.documentElement.scrollTop + 450,\r\n        behavior: 'smooth',\r\n      });\r\n  }, [page]);\r\n\r\n  const fetchProcessing = useCallback(\r\n    searchName => {\r\n      fethPhotosAPI(searchName, page)\r\n        .then(photos => {\r\n          if (photos.hits.length === 0) {\r\n            toast.error('Sorry, your query was not found... ');\r\n            setLoading(false);\r\n            return;\r\n          }\r\n\r\n          setPhotos(prePhotos => [...prePhotos, ...photos.hits]);\r\n          // setPage(prePage => prePage + 1);\r\n          setLoading(false);\r\n\r\n          scrollToBottom();\r\n        })\r\n        .catch(() => {\r\n          setError(error.message);\r\n        });\r\n    },\r\n    [page, scrollToBottom, error.message],\r\n  );\r\n\r\n  useEffect(() => {\r\n    setPhotos([]);\r\n    // setPage(1);\r\n\r\n    if (searchName === '') {\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    fetchProcessing(searchName);\r\n  }, [fetchProcessing, searchName]);\r\n\r\n  const nextPage = e => {\r\n    e.preventDefault();\r\n    fetchProcessing(searchName);\r\n    setPage(page + 1);\r\n  };\r\n\r\n  const handleInputSubmit = searchName => {\r\n    if (searchName === '') {\r\n      return;\r\n    }\r\n    setSearchName(searchName);\r\n    setPage(1);\r\n  };\r\n\r\n  const toggleModal = () => {\r\n    setShowModal(prevShowModal => !prevShowModal);\r\n  };\r\n\r\n  const handleGalleryItemClick = e => {\r\n    const largeUrl = e.target.dataset.largeUrl;\r\n    const alt = e.target.alt;\r\n\r\n    if (e.target.nodeName === 'IMG') {\r\n      setCurrentImgObjUrl(largeUrl);\r\n      setCurrentImgObjAlt(alt);\r\n    }\r\n    toggleModal();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Searchbar onSubmit={handleInputSubmit} />\r\n\r\n      {error && (\r\n        <h1\r\n          style={{\r\n            padding: '10px 20px',\r\n            textAlign: 'center',\r\n            color: 'red',\r\n          }}\r\n        >\r\n          {error.message}\r\n        </h1>\r\n      )}\r\n\r\n      {photos.length > 0 && (\r\n        <ImageGallery\r\n          photos={photos}\r\n          onClick={handleGalleryItemClick}\r\n        ></ImageGallery>\r\n      )}\r\n\r\n      {photos.length >= 11 ? (\r\n        <Button aria-label=\"Load more\" onClick={nextPage}></Button>\r\n      ) : null}\r\n\r\n      {loading && <Loader type=\"Puff\" color=\"#000\" height={500} width={500} />}\r\n\r\n      {showModal && (\r\n        <Modal\r\n          src={currentImgObjUrl}\r\n          alt={currentImgObjAlt}\r\n          onClose={toggleModal}\r\n        ></Modal>\r\n      )}\r\n\r\n      <ToastContainer\r\n        position=\"top-center\"\r\n        autoClose={3000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\n/* before \r\n\r\nclass App extends Component {\r\n  state = {\r\n    photos: [],\r\n    searchName: '',\r\n    error: '',\r\n    loading: false,\r\n    page: 1,\r\n    showModal: false,\r\n    currentImgObj: { largeUrl: '', alt: '' },\r\n  };\r\n\r\n  async componentDidUpdate(prevProps, prevState) {\r\n    const prevSearchName = prevState.searchName;\r\n    const { searchName } = this.state;\r\n\r\n    if (prevSearchName !== searchName) {\r\n      await this.setState({ loading: true, photos: [], page: 1 });\r\n\r\n      this.fetchProcessing(searchName);\r\n    }\r\n  }\r\n\r\n  fetchProcessing = searchName => {\r\n    const { page } = this.state;\r\n\r\n    fethPhotosAPI(searchName, page)\r\n      .then(photos => {\r\n        if (photos.hits.length === 0) {\r\n          return toast.error('Sorry, your query was not found... ');\r\n        }\r\n        this.setState(prevState => ({\r\n          photos: [...prevState.photos, ...photos.hits],\r\n          page: (prevState.page += 1),\r\n          loading: false,\r\n        }));\r\n        this.scrollToBottom();\r\n      })\r\n      .catch(({ message }) => this.setState({ error: message }));\r\n  };\r\n\r\n  scrollToBottom = () => {\r\n    if (this.state.page !== 2)\r\n      window.scrollTo({\r\n        top: document.documentElement.scrollTop + 450,\r\n        behavior: 'smooth',\r\n      });\r\n  };\r\n\r\n  handleInputSubmit = searchName => {\r\n    this.setState({ searchName });\r\n    this.resetPage();\r\n  };\r\n\r\n  resetPage = () => {\r\n    this.setState({ page: 1 });\r\n  };\r\n\r\n  nextPage = e => {\r\n    e.preventDefault();\r\n\r\n    this.fetchProcessing(this.state.searchName);\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState(({ showModal }) => ({\r\n      showModal: !showModal,\r\n    }));\r\n  };\r\n\r\n  handleGalleryItemClick = e => {\r\n    const largeUrl = e.target.dataset.largeUrl;\r\n    const alt = e.target.alt;\r\n\r\n    if (e.target.nodeName === 'IMG') {\r\n      this.setState({ currentImgObj: { largeUrl, alt } });\r\n    }\r\n    this.toggleModal();\r\n  };\r\n\r\n  render() {\r\n    const { error, loading, photos, showModal, currentImgObj } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <Searchbar onSubmit={this.handleInputSubmit} />\r\n\r\n        {error && (\r\n          <h1\r\n            style={{\r\n              padding: '10px 20px',\r\n              textAlign: 'center',\r\n              color: 'red',\r\n            }}\r\n          >\r\n            {error.message}\r\n          </h1>\r\n        )}\r\n\r\n        {photos.length > 0 && (\r\n          <ImageGallery\r\n            photos={photos}\r\n            onClick={this.handleGalleryItemClick}\r\n          ></ImageGallery>\r\n        )}\r\n\r\n        {photos.length >= 11 ? (\r\n          <Button aria-label=\"Load more\" onClick={this.nextPage}></Button>\r\n        ) : null}\r\n\r\n        {loading && (\r\n          <Loader type=\"Puff\" color=\"#000\" height={500} width={500} />\r\n        )}\r\n\r\n        {showModal && (\r\n          <Modal\r\n            src={currentImgObj.largeUrl}\r\n            alt={currentImgObj.alt}\r\n            onClose={this.toggleModal}\r\n          ></Modal>\r\n        )}\r\n\r\n        <ToastContainer\r\n          position=\"top-center\"\r\n          autoClose={3000}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n*/\r\n","// import React from \"react\";\r\nconst URL = \"https://pixabay.com/api/\";\r\nconst KEY = \"19138235-266d6c5ac156d39437978a172\";\r\n\r\nexport default function fethPhotosAPI(searchName, page) {\r\n  return fetch(\r\n    `${URL}?key=${KEY}&q=${searchName}&image_type=photo&orientation=horizontal&page=${page}&per_page=12`\r\n  ).then((response) => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n\r\n    return Promise.reject(\r\n      new Error(`There are no images for your query ${searchName}`)\r\n    );\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchBar\":\"Searchbar_SearchBar__sDg3L\",\"SearchForm\":\"Searchbar_SearchForm__1t3xW\",\"SearchFormButton\":\"Searchbar_SearchFormButton__2ZvOy\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__3-y3V\",\"SearchFormInput\":\"Searchbar_SearchFormInput__3V0nw\"};"],"sourceRoot":""}